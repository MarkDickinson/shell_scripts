# DEFAULT customisation file for all servers that do not have their
# own personalised configuration file.
#
# Comments are any line beginning with a #, if a # is part of
# any line not beginning with a # it is treated as part of the
# data and not as a comment.
#
# You may override this on an individual server basis if
# you create a file in this directory named 
# <hostname>.custom (ie: falcon.custom). If a custom
# file exists for a specific server it will be used
# instead of this one.
#
# ===============================================================
# Network check overrides
# ===============================================================
# By default all open ports are reported as critical until defined
# in a server customisation file, as it is important you know
# what network ports are expected to be open on your server(s).
#
# ------- Customising by known port number --------
#
# When defining ports in a customisation file the following
# processing rules will occur
# -- if the port is bound to specific addresses the port is
#    considered OK
# -- if the port is listening on all interfaces it is reported as 
#    a warning and the server warning count incremented
# -- if the optional :WILD parameter is used to indicate that
#    you require the port to listen on all interfaces no counters
#    are incremented but the report will display it in a different
#    colour to indicate it is still considered insecure.
#
# Syntax: TCP_PORTV<type>_ALLOWED=:<port-num>:<description>[:WILD]
#         UDP_PORTV<type>_ALLOWED=:<port-num>:<description>[:WILD]
#         RAW_PORTV<type>_ALLOWED=:<port-num>:<description>[:WILD]
#
# Notes: The ":" around the port number is to make exact
#        matching agaist the port number easier for the
#        processing script.
#        The optional :WILD means this port is expected to be bound 
#        to wildcard interfaces 0.0.0.0 and ::: and overrides the
#        default of reporting ports listening on all interfaces as
#        insecure. ONLY set that for ports you know cannot be 
#        configured to a specific interface or has a site reason 
#        to listen on all interfaces.
#
# Common TCP ports on Fedora systems
TCP_PORTV4_ALLOWED=:22:ssh:WILD
TCP_PORTV4_ALLOWED=:25:sendmail
TCP_PORTV4_ALLOWED=:111:portmapper
TCP_PORTV4_ALLOWED=:5666:NRPE
TCP_PORTV4_ALLOWED=:9102:Bacula FD
TCP_PORTV6_ALLOWED=:111:portmapper
TCP_PORTV6_ALLOWED=:5666:NRPE
TCP_PORTV6_ALLOWED=:9090:Cockpit
#
# Common UDP ports on Fedora systems
UDP_PORTV4_ALLOWED=:111:portmapper
UDP_PORTV4_ALLOWED=:123:NTP
UDP_PORTV6_ALLOWED=:111:portmapper
UDP_PORTV6_ALLOWED=:123:NTP
#
# Common RAW ports on Fedora systems, if tcpipv6 is enabled on the server
RAW_PORTV6_ALLOWED=:58:NetworkManager
#
# ------- Customising by known process name --------
#
# These parameters are for processes that use random ports,
# such as rpcbind, where it is impossible to define them
# as known ports using the parameters above.
# The value must be an exact 'full' match
# for the process details returned by 'ps'.
# Note: CentOS7 runs the below as '/sbin/rpcbind -w' (no -f and from sbin)
#
# When defining a process as being permitted/expected to use
# a port the following procesisng rules occur
# -- if the port is bound to specfic ip-addresses no
#    alert/warning counters are incremented, but the report
#    will display it in a different colour to indicate it
#    is insecure (as a process could match on multiple ports)
# -- if the port listens on all interfaces instead of a
#    critical alert a warning alert will be raised and the
#    warning counters incremented.
#    There is no facility such as the :WILD parameter in
#    the above section available here as having to
#    match by process must always be considered insecure.
#
# Syntax: NETWORK_TCPV4_PROCESS_ALLOW=/the/full/programname and parms
#         NETWORK_TCPV6_PROCESS_ALLOW=/the/full/programname and parms
#         NETWORK_UDPV4_PROCESS_ALLOW=/the/full/programname and parms
#         NETWORK_UDPV6_PROCESS_ALLOW=/the/full/programname and parms
#         NETWORK_RAWV4_PROCESS_ALLOW=/the/full/programname and parms
#         NETWORK_RAWV6_PROCESS_ALLOW=/the/full/programname and parms
#
# Coomon values required for Fedora systems
NETWORK_UDPV4_PROCESS_ALLOW=/usr/bin/rpcbind -w -f
NETWORK_UDPV6_PROCESS_ALLOW=/usr/bin/rpcbind -w -f
# The below are server specific so cannot be used in ALL.custom,
# needed for desktop machines so set for your environment
#NETWORK_UDPV4_PROCESS_ALLOW=avahi-daemon: running [phoenix.local]
#NETWORK_UDPV6_PROCESS_ALLOW=avahi-daemon: running [phoenix.local]
#
#
# ===============================================================
# Filesystem check check overrides
# Section E.1 System file security
# ===============================================================
#
# ---------------------------------------------------------------
# Additional users that can be considered system file owners for
# Fedora systems. These are additional users that are permitted
# to be owners of what are considered 'system' files.
# ---------------------------------------------------------------
ADD_SYSTEM_FILE_OWNER=tss
ADD_SYSTEM_FILE_OWNER=unbound
ADD_SYSTEM_FILE_OWNER=setroubleshoot
#
# ---------------------------------------------------------------
# Overrides affecting home directory checks
# ---------------------------------------------------------------
# Home Directory ownership overrides as required. Used in the
# case where many system users have home directories that are
# system directories that need to be owned by root and not the
# userid that has it defined as their home directory.
ALLOW_OWNER_ROOT=bin
ALLOW_OWNER_ROOT=sbin
ALLOW_OWNER_ROOT=daemon
ALLOW_OWNER_ROOT=lpd
ALLOW_OWNER_ROOT=sync
ALLOW_OWNER_ROOT=shutdown
ALLOW_OWNER_ROOT=halt
ALLOW_OWNER_ROOT=rpm
ALLOW_OWNER_ROOT=nfs
ALLOW_OWNER_ROOT=postfix
ALLOW_OWNER_ROOT=mail
ALLOW_OWNER_ROOT=mqueue
ALLOW_OWNER_ROOT=smmsp
ALLOW_OWNER_ROOT=sshd
ALLOW_OWNER_ROOT=dev
ALLOW_OWNER_ROOT=fs
ALLOW_OWNER_ROOT=gdm
ALLOW_OWNER_ROOT=adm
ALLOW_OWNER_ROOT=httpd
ALLOW_OWNER_ROOT=dnsmasq
ALLOW_OWNER_ROOT=pcp
ALLOW_OWNER_ROOT=root
ALLOW_OWNER_ROOT=usage
ALLOW_OWNER_ROOT=unbound
ALLOW_OWNER_ROOT=ntp
#
# Directory permission overrides for home directories that can
# be considered to be shared system directories
# These may be drwxr-xr-x, drwxr-x--x or drwx--x--x
ALLOW_DIRPERM_SYSTEM=bin
ALLOW_DIRPERM_SYSTEM=sbin
ALLOW_DIRPERM_SYSTEM=adm
ALLOW_DIRPERM_SYSTEM=lpd
ALLOW_DIRPERM_SYSTEM=backuppc
ALLOW_DIRPERM_SYSTEM=sshd
ALLOW_DIRPERM_SYSTEM=mysql
ALLOW_DIRPERM_SYSTEM=rpcuser
ALLOW_DIRPERM_SYSTEM=nfsnobody
ALLOW_DIRPERM_SYSTEM=usage
ALLOW_DIRPERM_SYSTEM=ntp
ALLOW_DIRPERM_SYSTEM=dnsmasq
ALLOW_DIRPERM_SYSTEM=unbound
ALLOW_DIRPERM_SYSTEM=httpd
ALLOW_DIRPERM_SYSTEM=postfix
ALLOW_DIRPERM_SYSTEM=nagios
ALLOW_DIRPERM_SYSTEM=puppet
ALLOW_DIRPERM_SYSTEM=colord
ALLOW_DIRPERM_SYSTEM=root
#
# If home directories fail all checks a test for an allowed
# override for expected OK perms can be provided here
ALLOW_DIRPERM_EXPLICIT=mail drwxrwxr-x
ALLOW_DIRPERM_EXPLICIT=avahi-autoipd drwxrwx--T
ALLOW_DIRPERM_EXPLICIT=bacula drwxr-x---
#
# The below two are probably Fedora specific, some system userids
# are defined with the home directories below, which are actually
# symbolic links so will always fail checks.
# (home directories that are links may be handled in version 0.07)
ALLOW_DIRPERM_EXPLICIT=bin lrwxrwxrwx
ALLOW_DIRPERM_EXPLICIT=sbin lrwxrwxrwx
#
# ---------------------------------------------------------------
# Overrides for individual files that are expected to be
# secured more loosely that default checks allow.
# ---------------------------------------------------------------
# Force explicit files as OK when checked, full path is needed
# for example /etc/dumpdates is normally also writeable by group disk
# so would always be group writeable by other than the file owner
# so raise an alert if not overridden
FORCE_PERM_OK=/etc/dumpdates
FORCE_PERM_OK=/var/log/wtmp
FORCE_PERM_OK=/var/log/btmp
FORCE_PERM_OK=/var/log/lastlog
FORCE_PERM_OK=/var/spool/clientmqueue/sm-client.st
# below two required by fedora systemd-update-done.service
# (see "man systemd-update-done.service -s8")
FORCE_PERM_OK=/var/.updated
FORCE_PERM_OK=/etc/.updated
#
# Allow a file of this name to be forced OK under any directory if
# it fails initial default checks.
# A risk, but Fedora now generates lots of dynamic PCI bus entries
# under the /sys/devices/pciNNNN:NN path as --w--w----. we do not
# want them generating false alerts.
# Risk is minimised be specifying the only permitted value.
FORCE_ANYFILE_OK=remove --w--w----
FORCE_ANYFILE_OK=rescan --w--w----
#
# ===============================================================
# Filesystem check check overrides
# Section E.2 Permitted SUID files
# ===============================================================
# SUID files on a Fedora 31 system KVM system
SUID_ALLOW=/usr/sbin/sendmail.sendmail
SUID_ALLOW=/usr/sbin/userhelper
SUID_ALLOW=/usr/bin/lockfile
SUID_ALLOW=/usr/bin/sudo
SUID_ALLOW=/usr/bin/crontab
SUID_ALLOW=/usr/bin/gpasswd
SUID_ALLOW=/usr/bin/at
SUID_ALLOW=/usr/bin/locate
SUID_ALLOW=/usr/bin/newgrp
SUID_ALLOW=/usr/bin/screen
SUID_ALLOW=/usr/bin/chage
SUID_ALLOW=/usr/bin/write
SUID_ALLOW=/usr/bin/passwd
SUID_ALLOW=/usr/libexec/openssh/ssh-keysign
SUID_ALLOW=/usr/libexec/utempter/utempter
SUID_ALLOW=/usr/libexec/cockpit-session
SUID_ALLOW=/usr/bin/mount
SUID_ALLOW=/usr/bin/su
SUID_ALLOW=/usr/bin/umount
SUID_ALLOW=/usr/bin/pkexec
SUID_ALLOW=/usr/sbin/pam_timestamp_check
SUID_ALLOW=/usr/sbin/mount.nfs
SUID_ALLOW=/usr/sbin/unix_chkpwd
SUID_ALLOW=/usr/lib/polkit-1/polkit-agent-helper-1
SUID_ALLOW=/usr/libexec/dbus-1/dbus-daemon-launch-helper
SUID_ALLOW=/usr/sbin/usernetctl
SUID_ALLOW=/usr/sbin/mtr-packet
SUID_ALLOW=/usr/sbin/grub2-set-bootflag
# I have nrpe and nagios-plugins-all installed on all my servers
SUID_ALLOW=/usr/lib64/nagios/plugins/check_dhcp
SUID_ALLOW=/usr/lib64/nagios/plugins/check_icmp
SUID_ALLOW=/usr/lib64/nagios/plugins/check_ide_smart
SUID_ALLOW=/usr/lib64/nagios/plugins/check_fping
#
# Additional if on a non KVM guest system
#SUID_ALLOW=/usr/sbin/lockdev
#SUID_ALLOW=/usr/bin/chsh
#SUID_ALLOW=/usr/bin/chfn
#SUID_ALLOW=/usr/libexec/qemu-bridge-helper
#SUID_ALLOW=/usr/libexec/abrt-action-install-debuginfo-to-abrt-cache
#SUID_ALLOW=/usr/libexec/Xorg.wrap
#SUID_ALLOW=/usr/bin/fusermount
#SUID_ALLOW=/usr/bin/fusermount-glusterfs
#
# ===============================================================
# Special alert suppression parameters
# ===============================================================
# Do not raise a warning to remind manual log retention checks
# are needed.
NOWARN_ON_MANUALLOGCHECK=YES
# Do not raise a warning when a customisation file is used for a
# server.
NOWARN_ON_CUSTOMFILE=YES
